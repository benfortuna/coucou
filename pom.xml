<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.mnode.base</groupId>
		<artifactId>base-parent</artifactId>
		<version>0.0.2-SNAPSHOT</version>
	</parent>
	<groupId>org.mnode.coucou</groupId>
	<artifactId>coucou</artifactId>
	<name>Coucou</name>
	<version>0.0.1-SNAPSHOT</version>
	<description>Online communications tool</description>
	<url>http://basetools.org/coucou</url>
	<repositories>
		<repository>
			<id>modularity-releases</id>
			<name>Modularity Releases</name>
			<url>http://m2.modularity.net.au/releases</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>mnode-snapshots</id>
			<name>Micronode Snapshots</name>
			<url>http://build.mnode.org/snapshots</url>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
		<repository>
			<id>jvnet-releases</id>
			<name>Java.net Releases</name>
			<url>http://download.java.net/maven/2/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>jboss-releases</id>
			<name>JBoss Maven Repository</name>
			<url>http://repository.jboss.com/maven2/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<releases>
				<enabled>false</enabled>
			</releases>
			<id>modularity-snapshots</id>
			<name>Modularity Snapshots</name>
			<url>http://m2.modularity.net.au/snapshots</url>
		</repository>
	</repositories>
	
	<dependencies>
		<dependency>
	        <groupId>org.codehaus.groovy</groupId>
	        <artifactId>groovy-all</artifactId>
    	</dependency>
		<dependency>
			<groupId>org.mnode.base</groupId>
			<artifactId>base-feed</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
    	
		<dependency>
        	<groupId>org.apache.jackrabbit</groupId>
        	<artifactId>jackrabbit-core</artifactId>
        </dependency>
		<dependency>
        	<groupId>org.slf4j</groupId>
        	<artifactId>slf4j-log4j12</artifactId>
        </dependency>
		<dependency>
        	<groupId>javax.jcr</groupId>
        	<artifactId>jcr</artifactId>
        	<version>2.0</version>
        </dependency>
		<dependency>
			<groupId>org.mnode.base</groupId>
			<artifactId>base-wiki</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>net.fortuna.mstor</groupId>
			<artifactId>mstor</artifactId>
			<version>0.9.13-SNAPSHOT</version>
		</dependency>
		<!--
		<dependency>
			<groupId>jgoodies</groupId>
			<artifactId>forms</artifactId>
			<version>1.0.5</version>
		</dependency>
		-->
		<dependency>
			<groupId>org.mnode.ousia</groupId>
			<artifactId>ousia</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.mnode.base</groupId>
			<artifactId>base-log</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
        <dependency>
            <groupId>net.java.dev.substance</groupId>
            <artifactId>substance</artifactId>
        </dependency>
        <dependency>
            <groupId>net.java.dev.substance</groupId>
            <artifactId>substance-swingx</artifactId>
        </dependency>
        <dependency>
            <groupId>net.java.dev.substance</groupId>
            <artifactId>swingx</artifactId>
        </dependency>
        <dependency>
            <groupId>net.java.dev.substance</groupId>
            <artifactId>trident</artifactId>
        </dependency>
        <dependency>
            <groupId>eu.kostia.gtkjfilechooser</groupId>
            <artifactId>gtkjfilechooser</artifactId>
            <version>1.4.8</version>
        </dependency>
        <dependency>
            <groupId>net.java.dev.flamingo</groupId>
            <artifactId>flamingo</artifactId>
            <version>5.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-transcoder</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-swing</artifactId>
        </dependency>
        <dependency>
            <groupId>com.miglayout</groupId>
            <artifactId>miglayout</artifactId>
            <version>3.7.3.1</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>net.java.dev.glazedlists</groupId>
            <artifactId>glazedlists_java15</artifactId>
            <version>1.8.0</version>
        </dependency>
        <dependency>
        	<groupId>org.mnode.juicer</groupId>
        	<artifactId>juicer</artifactId>
        	<version>0.0.1-SNAPSHOT</version>
        </dependency>
        <dependency>
        	<groupId>org.codehaus.gpars</groupId>
        	<artifactId>gpars</artifactId>
        	<version>0.10</version>
        	<type>jar</type>
        	<scope>compile</scope>
        </dependency>
        <dependency>
        	<groupId>com.ocpsoft</groupId>
        	<artifactId>ocpsoft-pretty-time</artifactId>
        	<version>1.0.6</version>
        	<type>jar</type>
        	<scope>compile</scope>
        </dependency>
        <dependency>
        	<groupId>net.fortuna.ical4j</groupId>
        	<artifactId>ical4j-connector</artifactId>
        	<version>0.9.1-SNAPSHOT</version>
        	<scope>compile</scope>
        </dependency>
        <dependency>
        	<groupId>org.gcontracts</groupId>
        	<artifactId>gcontracts</artifactId>
        	<version>1.1.3</version>
        	<type>jar</type>
        	<scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.swinglabs</groupId>
            <artifactId>jxlayer</artifactId>
            <version>3.0.4</version>
        </dependency>
	</dependencies>
	<scm>
		<connection>scm:hg:https://coucou.googlecode.com/hg/</connection>
		<developerConnection>scm:hg:https://coucou.googlecode.com/hg/</developerConnection>
	</scm>

	<build>
		<plugins>

            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>gmaven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>com.google.code.maven-license-plugin</groupId>
                <artifactId>maven-license-plugin</artifactId>
            </plugin>
		
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifestEntries>
							<SplashScreen-Image>splash.png</SplashScreen-Image>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo.webstart
				</groupId>
				<artifactId>webstart-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>jnlp</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!--outputDirectory></outputDirectory--> <!-- not required?? -->
					<!--
						Set to true to exclude all transitive dependencies. Default is
						false.
					-->
					<excludeTransitive>false</excludeTransitive>
					<!--
						The path where the libraries are stored within the jnlp structure.
						not required. by default the libraries are within the working
						directory
					-->
					<libPath>lib</libPath>
					<!--
						[optional] transitive dependencies filter - if omitted, all
						transitive dependencies are included
					-->
					<dependencies>
						<!--
							Note that only groupId and artifactId must be specified here.
							because of a limitation of the Include/ExcludesArtifactFilter
						-->
						<!--
							<includes> <include>net.modularity.core:desktop</include>
							<include>net.modularity.core:xmpp</include>
							<include>net.modularity.core:mail</include>
							<include>net.modularity.core:calendar</include>
							<include>net.modularity.core:logging</include>
							<include>commons-lang:commons-lang</include> </includes>
						-->
						<!--
							excludes> <exclude></exclude> <excludes
						-->
					</dependencies>

					<resourcesDirectory>${project.basedir}/src/main/jnlp/resources</resourcesDirectory>

					<!-- default value -->

					<!-- JNLP generation -->
					<jnlp>
						<!-- default values -->
						<!--
							inputTemplateResourcePath>${project.basedir}</inputTemplateResourcePath
						-->
						<!--inputTemplate>src/main/jnlp/template.vm</inputTemplate--> <!-- relative to inputTemplateResourcePath -->
						<!-- defaults to launch.jnlp -->
						<!-- 
						<outputFile>views.jnlp</outputFile>
						 -->
						<!--
							used to automatically identify the jar containing the main class.
						-->
						<!-- this is perhaps going to change -->
						<mainClass>org.mnode.coucou.Coucou</mainClass>
						<j2seVersion>1.6+</j2seVersion>
					</jnlp>


					<!-- SIGNING -->
					<!--
						defining this will automatically sign the jar and its
						dependencies, if necessary
					-->
					<sign>
						<keystore>micronode</keystore>
						<keypass>!modular1</keypass>
						<!--
							we need to override passwords easily from the command line.
							${keypass}
						-->
						<storepass>!modular1</storepass> <!-- ${storepass} -->
						<!--storetype>fillme</storetype-->
						<alias>webstart</alias>

						<!-- only required for generating the keystore -->
						<storetype>jks</storetype>
						<validity>365</validity>
						<dnameCn>Ben Fortuna</dnameCn>
						<dnameOu>Coucou</dnameOu>
						<dnameO>Micronode</dnameO>
						<dnameL>Melbourne</dnameL>
						<dnameSt>Victoria</dnameSt>
						<dnameC>AU</dnameC>
						<verify>true</verify> <!-- verify that the signing operation succeeded -->

						<!-- KEYSTORE MANAGEMENT -->
						<keystoreConfig>
							<delete>true</delete> <!-- delete the keystore -->
							<gen>true</gen>       <!-- optional shortcut to generate the store. -->
						</keystoreConfig>
					</sign>
					<unsignAlreadySignedJars>true</unsignAlreadySignedJars>

					<!-- BUILDING PROCESS -->
					<pack200>true</pack200>
					<gzip>true</gzip> <!-- default force when pack200 false, true when pack200 selected ?? -->
					<!--
						causes a version attribute to be output in each jar resource
						element, optional, default is false
					-->
					<!-- 
					<outputJarVersions>true</outputJarVersions>
					 -->

					<!--install>false</install--> <!-- not yet supported -->
					<verbose>true</verbose>
				</configuration>
			</plugin>

			<!-- Deploy webstart -->
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>deploy</phase>
						<configuration>
							<tasks>
								<scp file="target/${project.build.finalName}.zip"
									todir="modularity@mnode.org:basetools.org/coucou"
									keyfile="${user.home}/.ssh/id_rsa" passphrase="" />

								<sshexec host="mnode.org" username="modularity"
									keyfile="${user.home}/.ssh/id_rsa" passphrase=""
									command="unzip -o basetools.org/coucou/${project.build.finalName}.zip -d basetools.org/coucou/webstart" />
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
